//SMARS Demo 3 with ultrasonic sensor
//This sketch makes the robot avoid obstacles.
//you'll need a motor driver https://goo.gl/v8ADzU and an ultrasonic sensor
https://goo.gl/upDRNi
int lmotorpin1=3;
int lmotorpin2=5;
int rmotorpin1=6;
int rmotorpin2=9;
int distancecm=0;
const int trigPin = 10;
const int echoPin = 11;
// defines variables
long duration;
int distance;
void setup() {
pinMode(lmotorpin1,OUTPUT);
pinMode(lmotorpin2,OUTPUT);
pinMode(rmotorpin1,OUTPUT);
pinMode(rmotorpin2,OUTPUT);
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin, INPUT); // Sets the echoPin as an Input
}
void loop() {
distancecm=mdistance();
if(distance<5){
digitalWrite(lmotorpin1,LOW);
digitalWrite(lmotorpin2,HIGH);
digitalWrite(rmotorpin1,LOW);
digitalWrite(rmotorpin2,HIGH);
delay(1000);
digitalWrite(lmotorpin1,LOW);
digitalWrite(lmotorpin2,HIGH);
digitalWrite(rmotorpin1,HIGH);
digitalWrite(rmotorpin2,LOW);
delay(1000);
}
else{
digitalWrite(rmotorpin1,HIGH);
digitalWrite(rmotorpin2,LOW);
digitalWrite(lmotorpin1,HIGH);
digitalWrite(lmotorpin2,LOW);
}
}
int mdistance()
{
/
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// Calculating the distance
distance= duration*0.034/2;
// Prints the distance on the Serial Monitor
Serial.print("Distance: ");
}
